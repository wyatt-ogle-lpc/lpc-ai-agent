<%# app/views/home/index.html.erb %>

<% agent_tooltips = {
  0 => ["Clypboard Assistant", "Clypboard Assistant retrieves Work orders, schedules, leads & Clypboard data\nPerfect for any Clypboard retrieval"],
  1 => ["Handbook Helper", "Handbook Helper knows PTO, policies, HR rules & employee guidelines\nPerfect for HR questions"],
  2 => ["Route Tech Assistant", "Route Tech Assistant knows fieldwork steps, safety, and equipment use\nPerfect for in-field questions"],
  3 => ["Call Center Agent", "Call Center Agent knows internal call flow, billing, scheduling protocols\nIndended for call center staff"],
  4 => ["Lloydbot", "Lloydbot routes requests to the right internal assistant\nGood if you aren't sure which agent to use"]
} %>


<div class="llm-welcome-container">
  <div class="notification-bell-wrapper">
    <%= link_to notifications_path, class: "notification-bell notification-bell-large", data: { turbo: false } do %>
      <%= image_tag "bell.svg", alt: "Notifications", class: "bell-icon bell-icon-large" %>
      <% if @has_updates %>
        <span class="bell-dot bell-dot-large"></span>
      <% end %>
      <span class="tooltip">Notifications</span>
    <% end %>

    <%= link_to settings_path, class: "settings-icon", data: { turbo: false } do %>
      <%= image_tag "settings.svg", alt: "Settings", class: "settings-icon-img" %>
      <span class="tooltip">Settings</span>
    <% end %>

    <div class="profile-dropdown-wrapper">
      <button class="profile-btn">
        <%= image_tag "profile.svg", alt: "Profile", class: "profile-icon" %>
      </button>
    
      <div class="profile-dropdown hidden">
        <p><%= current_user['info']['name'] %></p>
        <p><%= current_user['info']['email'] %></p>
        <p>Role: <%= current_user['role'].capitalize %></p>
        <%= button_to "Logout", logout_path, method: :delete, class: "dropdown-logout", form_class: "logout-form" %>
      </div>
    </div>
    
  </div>
  <!-- Giant background image -->
  <div class="background-mouse">
    <%= image_tag "mouse.png", alt: "", class: "bg-mouse-img" %>
  </div>
  <!-- Left: Text buttons -->
<div class="llm-agent-select">
  <h3 class="select-title">Select Agent</h3>

    <% agent_tooltips.each do |id, (name, tooltip)| %>
      <div class="agent-entry" 
          data-agent-name="<%= name %>" 
          data-agent-description="<%= tooltip.downcase.gsub("\n", '<br>') %>">
          <%= link_to name, ask_path(agent_id: id), class: "text-link", data: { turbo: false } %>
          </div>
    <% end %>

  <%= button_to "Logout", logout_path, method: :delete, class: "logout-btn", form_class: "logout-form" %>
</div>


  <!-- Center: Logo and heading -->
  <div class="llm-welcome-centerpiece">
    <div class="centerpiece-static">
      <div class="logo-container">
        <%= image_tag "mouse.png", alt: "LPC Logo", class: "logo" %>
      </div>
      <h1 class="heading-welcome" id="agent-heading">
        Hello, <%= current_user['info']['first_name'] %><br>Welcome to the LPC AI Agent
      </h1>
    </div>

    <div class="heading-sub-wrapper">
      <h3 class="heading-sub" id="agent-subheading">
        hover over an agent to see its details
      </h3>
    </div>
  </div>


</div>


<script>
document.addEventListener("DOMContentLoaded", () => {
  const agentHeading = document.getElementById("agent-heading");
  const agentSubheading = document.getElementById("agent-subheading");
  const defaultTitle = "Hello, <%= current_user['info']['first_name'] %><br>Welcome to the LPC AI Agent";
  const defaultSubtitle = "Hover over an agent to see its details";
  const isMobile = () => window.innerWidth <= 768;

  function updateTextWithFade(element, newText) {
    element.style.opacity = 0;
    setTimeout(() => {
      element.innerHTML = newText;
      element.style.opacity = 1;
    }, 150);
  }

  // Store selection state for mobile
  let selectedEntry = null;

  document.querySelectorAll(".agent-entry").forEach(entry => {
    const link = entry.querySelector('.text-link');

    // Desktop: Use hover for details, click to go
    entry.addEventListener("mouseenter", e => {
      if (!isMobile()) {
        updateTextWithFade(agentHeading, entry.dataset.agentName);
        updateTextWithFade(agentSubheading, entry.dataset.agentDescription);
      }
    });
    entry.addEventListener("mouseleave", e => {
      if (!isMobile()) {
        updateTextWithFade(agentHeading, defaultTitle);
        updateTextWithFade(agentSubheading, defaultSubtitle);
      }
    });

    // Mobile: tap once for details, tap again to select
    entry.addEventListener("click", function(e) {
      if (!isMobile()) return; // Only on mobile
      e.preventDefault(); // Prevent navigation by default

      if (selectedEntry !== entry) {
        // First tap: show details, highlight
        if (selectedEntry) selectedEntry.classList.remove('selected');
        selectedEntry = entry;
        entry.classList.add('selected');
        updateTextWithFade(agentHeading, entry.dataset.agentName);
        updateTextWithFade(agentSubheading, entry.dataset.agentDescription);
      } else {
        // Second tap: proceed to link
        window.location.href = link.href;
      }
    });
  });

  // Reset selection on window resize (mobile <-> desktop)
  window.addEventListener("resize", () => {
    if (!isMobile() && selectedEntry) {
      selectedEntry.classList.remove('selected');
      selectedEntry = null;
      updateTextWithFade(agentHeading, defaultTitle);
      updateTextWithFade(agentSubheading, defaultSubtitle);
    }
  });
});

document.addEventListener("DOMContentLoaded", () => {
  const btn = document.querySelector(".profile-btn");
  const dropdown = document.querySelector(".profile-dropdown");

  if (btn && dropdown) {
    btn.addEventListener("click", (e) => {
      e.stopPropagation();
      dropdown.classList.toggle("hidden");
    });

    // Close dropdown when clicking outside
    document.addEventListener("click", () => {
      dropdown.classList.add("hidden");
    });
  }
});


</script>

